// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/alimzhanoff/property-finder/internal/models"
)

// AllPropertiesGetter is an autogenerated mock type for the AllPropertiesGetter type
type AllPropertiesGetter struct {
	mock.Mock
}

// GetAllProperties provides a mock function with given fields: ctx
func (_m *AllPropertiesGetter) GetAllProperties(ctx context.Context) ([]models.Property, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetAllProperties")
	}

	var r0 []models.Property
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]models.Property, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []models.Property); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Property)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAllPropertiesGetter creates a new instance of AllPropertiesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAllPropertiesGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *AllPropertiesGetter {
	mock := &AllPropertiesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
